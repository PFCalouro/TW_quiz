{"ast":null,"code":"\n\n// import DefaultLayout from \"../layouts/DefaultLayout.jsx\";\n// import styled from \"styled-components\";\n// import { Formik } from \"formik\";\n// import * as Yup from \"yup\";\n// import { register } from \"../services/Auth.js\";\n// import { useNavigate } from \"react-router\";\n// import { useEffect } from \"react\";\n// import { useAuth } from \"../Context.js\";\n//\n// const Title = styled.h1`\n//     font-size: 32px;\n//     font-weight: bold;\n//     margin-bottom: 20px;\n//     color: #f4a261;\n// `;\n//\n// const Container = styled.div`\n//     display: flex;\n//     flex-direction: column;\n//     justify-content: center;\n//     align-items: center;\n//     width: 400px;\n//     padding: 30px;\n//     background-color: #0f044c;\n//     border-radius: 15px;\n//     box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n//     text-align: center;\n// `;\n//\n// const Input = styled.input`\n//     height: 48px;\n//     width: 100%;\n//     font-size: large;\n//     border-radius: 8px;\n//     border: 1px solid grey;\n//     padding-left: 8px;\n//     margin-bottom: 10px;\n// `;\n//\n// const InputErrorLabel = styled.label`\n//     color: red;\n//     font-size: 12px;\n//     margin-bottom: 10px;\n// `;\n//\n// const SubmitButton = styled.button`\n//     margin-top: 10px;\n//     background-color: #f4a261;\n//     color: white;\n//     height: 48px;\n//     width: 100%;\n//     font-size: large;\n//     border-radius: 8px;\n//     border: none;\n//     cursor: pointer;\n//     transition: background-color 0.3s ease;\n//\n//     &:hover {\n//         background-color: #e76f51;\n//     }\n// `;\n//\n// const InputContainer = styled.div`\n//     display: flex;\n//     flex-direction: column;\n//     width: 100%;\n// `;\n//\n// export default function Register() {\n//     const { user, loading, setUser } = useAuth();\n//     const navigate = useNavigate();\n//\n//     useEffect(() => {\n//         if (user && !loading) {\n//             navigate(\"/login\");\n//         }\n//     }, [user, loading, navigate]);\n//\n//     const handleSubmit = async (values, { setSubmitting }) => {\n//         setSubmitting(true);\n//         const registeredUser = await register(values.username, values.email, values.firstName, values.lastName, values.password);\n//\n//         if (registeredUser) {\n//             setUser(registeredUser);\n//             navigate(\"/login\");\n//         } else {\n//             console.error(\"Registration failed\");\n//         }\n//         setSubmitting(false);\n//     };\n//\n//     return (\n//         <DefaultLayout>\n//             <Container>\n//                 <Title>Register</Title>\n//\n//                 <Formik\n//                     initialValues={{ username: '', email: '',firstName:'', lastName: '', password: '', confirmPassword: '' }}\n//                     validationSchema={Yup.object({\n//                         username: Yup.string().required('Username is required'),\n//                         email: Yup.string().email('Invalid email address').required('Email is required'),\n//                         firstName: Yup.string().required('First name is required'),\n//                         lastName: Yup.string().required('Last name is required'),\n//                         password: Yup.string().required('Password is required'),\n//                         confirmPassword: Yup.string()\n//                             .oneOf([Yup.ref('password'), null], 'Passwords must match')\n//                             .required('Confirm Password is required')\n//                     })}\n//                     onSubmit={handleSubmit}\n//                 >\n//                     {({\n//                           values,\n//                           errors,\n//                           touched,\n//                           handleChange,\n//                           handleBlur,\n//                           handleSubmit,\n//                           isSubmitting,\n//                       }) => (\n//                         <form onSubmit={handleSubmit}>\n//\n//                             <InputContainer>\n//                                 <Input\n//                                     type=\"text\"\n//                                     placeholder=\"Username\"\n//                                     name=\"username\"\n//                                     onChange={handleChange}\n//                                     onBlur={handleBlur}\n//                                     value={values.username} />\n//                                 <InputErrorLabel>{errors.username && touched.username && errors.username}</InputErrorLabel>\n//                             </InputContainer>\n//                             <InputContainer>\n//                                 <Input\n//                                     type=\"email\"\n//                                     placeholder=\"Email\"\n//                                     name=\"email\"\n//                                     onChange={handleChange}\n//                                     onBlur={handleBlur}\n//                                     value={values.email} />\n//                                 <InputErrorLabel>{errors.email && touched.email && errors.email}</InputErrorLabel>\n//                             </InputContainer>\n//\n//                             <InputContainer>\n//                                 <Input\n//                                     type=\"text\"\n//                                     placeholder=\"First Name\"\n//                                     name=\"firstName\"\n//                                     onChange={handleChange}\n//                                     onBlur={handleBlur}\n//                                     value={values.firstName} />\n//                                 <InputErrorLabel>{errors.firstName && touched.firstName && errors.firstName}</InputErrorLabel>\n//                             </InputContainer>\n//                             <InputContainer>\n//                                 <Input\n//                                     type=\"text\"\n//                                     placeholder=\"Last Name\"\n//                                     name=\"lastName\"\n//                                     onChange={handleChange}\n//                                     onBlur={handleBlur}\n//                                     value={values.lastName} />\n//                                 <InputErrorLabel>{errors.lastName && touched.lastName && errors.lastName}</InputErrorLabel>\n//                             </InputContainer>\n//                             <InputContainer>\n//                                 <Input\n//                                     type=\"password\"\n//                                     placeholder=\"Password\"\n//                                     name=\"password\"\n//                                     onChange={handleChange}\n//                                     onBlur={handleBlur}\n//                                     value={values.password} />\n//                                 <InputErrorLabel>{errors.password && touched.password && errors.password}</InputErrorLabel>\n//                             </InputContainer>\n//                             <InputContainer>\n//                                 <Input\n//                                     type=\"password\"\n//                                     placeholder=\"Confirm Password\"\n//                                     name=\"confirmPassword\"\n//                                     onChange={handleChange}\n//                                     onBlur={handleBlur}\n//                                     value={values.confirmPassword} />\n//                                 <InputErrorLabel>{errors.confirmPassword && touched.confirmPassword && errors.confirmPassword}</InputErrorLabel>\n//                             </InputContainer>\n//                             <SubmitButton type=\"submit\" disabled={isSubmitting}>Register</SubmitButton>\n//                         </form>\n//                     )}\n//                 </Formik>\n//             </Container>\n//         </DefaultLayout>\n//     )\n// }","map":{"version":3,"names":[],"sources":["D:/Transferencias/quiz_modificada/quiz/frontend/src/pages/Register.jsx"],"sourcesContent":["\r\n\r\n\r\n\r\n// import DefaultLayout from \"../layouts/DefaultLayout.jsx\";\r\n// import styled from \"styled-components\";\r\n// import { Formik } from \"formik\";\r\n// import * as Yup from \"yup\";\r\n// import { register } from \"../services/Auth.js\";\r\n// import { useNavigate } from \"react-router\";\r\n// import { useEffect } from \"react\";\r\n// import { useAuth } from \"../Context.js\";\r\n//\r\n// const Title = styled.h1`\r\n//     font-size: 32px;\r\n//     font-weight: bold;\r\n//     margin-bottom: 20px;\r\n//     color: #f4a261;\r\n// `;\r\n//\r\n// const Container = styled.div`\r\n//     display: flex;\r\n//     flex-direction: column;\r\n//     justify-content: center;\r\n//     align-items: center;\r\n//     width: 400px;\r\n//     padding: 30px;\r\n//     background-color: #0f044c;\r\n//     border-radius: 15px;\r\n//     box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n//     text-align: center;\r\n// `;\r\n//\r\n// const Input = styled.input`\r\n//     height: 48px;\r\n//     width: 100%;\r\n//     font-size: large;\r\n//     border-radius: 8px;\r\n//     border: 1px solid grey;\r\n//     padding-left: 8px;\r\n//     margin-bottom: 10px;\r\n// `;\r\n//\r\n// const InputErrorLabel = styled.label`\r\n//     color: red;\r\n//     font-size: 12px;\r\n//     margin-bottom: 10px;\r\n// `;\r\n//\r\n// const SubmitButton = styled.button`\r\n//     margin-top: 10px;\r\n//     background-color: #f4a261;\r\n//     color: white;\r\n//     height: 48px;\r\n//     width: 100%;\r\n//     font-size: large;\r\n//     border-radius: 8px;\r\n//     border: none;\r\n//     cursor: pointer;\r\n//     transition: background-color 0.3s ease;\r\n//\r\n//     &:hover {\r\n//         background-color: #e76f51;\r\n//     }\r\n// `;\r\n//\r\n// const InputContainer = styled.div`\r\n//     display: flex;\r\n//     flex-direction: column;\r\n//     width: 100%;\r\n// `;\r\n//\r\n// export default function Register() {\r\n//     const { user, loading, setUser } = useAuth();\r\n//     const navigate = useNavigate();\r\n//\r\n//     useEffect(() => {\r\n//         if (user && !loading) {\r\n//             navigate(\"/login\");\r\n//         }\r\n//     }, [user, loading, navigate]);\r\n//\r\n//     const handleSubmit = async (values, { setSubmitting }) => {\r\n//         setSubmitting(true);\r\n//         const registeredUser = await register(values.username, values.email, values.firstName, values.lastName, values.password);\r\n//\r\n//         if (registeredUser) {\r\n//             setUser(registeredUser);\r\n//             navigate(\"/login\");\r\n//         } else {\r\n//             console.error(\"Registration failed\");\r\n//         }\r\n//         setSubmitting(false);\r\n//     };\r\n//\r\n//     return (\r\n//         <DefaultLayout>\r\n//             <Container>\r\n//                 <Title>Register</Title>\r\n//\r\n//                 <Formik\r\n//                     initialValues={{ username: '', email: '',firstName:'', lastName: '', password: '', confirmPassword: '' }}\r\n//                     validationSchema={Yup.object({\r\n//                         username: Yup.string().required('Username is required'),\r\n//                         email: Yup.string().email('Invalid email address').required('Email is required'),\r\n//                         firstName: Yup.string().required('First name is required'),\r\n//                         lastName: Yup.string().required('Last name is required'),\r\n//                         password: Yup.string().required('Password is required'),\r\n//                         confirmPassword: Yup.string()\r\n//                             .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n//                             .required('Confirm Password is required')\r\n//                     })}\r\n//                     onSubmit={handleSubmit}\r\n//                 >\r\n//                     {({\r\n//                           values,\r\n//                           errors,\r\n//                           touched,\r\n//                           handleChange,\r\n//                           handleBlur,\r\n//                           handleSubmit,\r\n//                           isSubmitting,\r\n//                       }) => (\r\n//                         <form onSubmit={handleSubmit}>\r\n//\r\n//                             <InputContainer>\r\n//                                 <Input\r\n//                                     type=\"text\"\r\n//                                     placeholder=\"Username\"\r\n//                                     name=\"username\"\r\n//                                     onChange={handleChange}\r\n//                                     onBlur={handleBlur}\r\n//                                     value={values.username} />\r\n//                                 <InputErrorLabel>{errors.username && touched.username && errors.username}</InputErrorLabel>\r\n//                             </InputContainer>\r\n//                             <InputContainer>\r\n//                                 <Input\r\n//                                     type=\"email\"\r\n//                                     placeholder=\"Email\"\r\n//                                     name=\"email\"\r\n//                                     onChange={handleChange}\r\n//                                     onBlur={handleBlur}\r\n//                                     value={values.email} />\r\n//                                 <InputErrorLabel>{errors.email && touched.email && errors.email}</InputErrorLabel>\r\n//                             </InputContainer>\r\n//\r\n//                             <InputContainer>\r\n//                                 <Input\r\n//                                     type=\"text\"\r\n//                                     placeholder=\"First Name\"\r\n//                                     name=\"firstName\"\r\n//                                     onChange={handleChange}\r\n//                                     onBlur={handleBlur}\r\n//                                     value={values.firstName} />\r\n//                                 <InputErrorLabel>{errors.firstName && touched.firstName && errors.firstName}</InputErrorLabel>\r\n//                             </InputContainer>\r\n//                             <InputContainer>\r\n//                                 <Input\r\n//                                     type=\"text\"\r\n//                                     placeholder=\"Last Name\"\r\n//                                     name=\"lastName\"\r\n//                                     onChange={handleChange}\r\n//                                     onBlur={handleBlur}\r\n//                                     value={values.lastName} />\r\n//                                 <InputErrorLabel>{errors.lastName && touched.lastName && errors.lastName}</InputErrorLabel>\r\n//                             </InputContainer>\r\n//                             <InputContainer>\r\n//                                 <Input\r\n//                                     type=\"password\"\r\n//                                     placeholder=\"Password\"\r\n//                                     name=\"password\"\r\n//                                     onChange={handleChange}\r\n//                                     onBlur={handleBlur}\r\n//                                     value={values.password} />\r\n//                                 <InputErrorLabel>{errors.password && touched.password && errors.password}</InputErrorLabel>\r\n//                             </InputContainer>\r\n//                             <InputContainer>\r\n//                                 <Input\r\n//                                     type=\"password\"\r\n//                                     placeholder=\"Confirm Password\"\r\n//                                     name=\"confirmPassword\"\r\n//                                     onChange={handleChange}\r\n//                                     onBlur={handleBlur}\r\n//                                     value={values.confirmPassword} />\r\n//                                 <InputErrorLabel>{errors.confirmPassword && touched.confirmPassword && errors.confirmPassword}</InputErrorLabel>\r\n//                             </InputContainer>\r\n//                             <SubmitButton type=\"submit\" disabled={isSubmitting}>Register</SubmitButton>\r\n//                         </form>\r\n//                     )}\r\n//                 </Formik>\r\n//             </Container>\r\n//         </DefaultLayout>\r\n//     )\r\n// }\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}