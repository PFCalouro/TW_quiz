{"ast":null,"code":"var _jsxFileName = \"D:\\\\Transferencias\\\\quiz_modificada\\\\quiz\\\\frontend\\\\src\\\\pages\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport DefaultLayout from \"../layouts/DefaultLayout.jsx\";\nimport { login } from \"../services/Auth.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    background-color: #0f044c;\n    color: white;\n`;\n_c = Container;\nconst Title = styled.h1`\n    font-size: 48px;\n    color: #f4a261;\n    margin-bottom: 20px;\n`;\n_c2 = Title;\nconst Input = styled.input`\n    height: 48px;\n    width: 400px;\n    font-size: large;\n    border-radius: 8px;\n    border: 1px solid grey;\n    padding-left: 8px;\n    margin-bottom: 10px;\n`;\n_c3 = Input;\nconst SubmitButton = styled.button`\n    margin-top: 10px;\n    background-color: #f4a261;\n    color: white;\n    height: 48px;\n    width: 150px;\n    font-size: large;\n    border-radius: 8px;\n    border: none;\n    cursor: pointer;\n\n    &:hover {\n        background-color: #e76f51;\n    }\n`;\n_c4 = SubmitButton;\nconst RegisterLink = styled.div`\n    margin-top: 20px;\n    font-size: 16px;\n    color: #f4a261;\n    cursor: pointer;\n\n    &:hover {\n        text-decoration: underline;\n    }\n`;\nconst ErrorMessage = styled.div`\n    color: red;\n    margin-top: 10px;\n`;\nexport default function Login() {\n  _s();\n  const {\n    user,\n    loading,\n    setUser\n  } = useAuth();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (user && !loading) {\n      navigate(\"/home\");\n    }\n  }, [user, loading, navigate]);\n  return /*#__PURE__*/_jsxDEV(DefaultLayout, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          username: '',\n          password: ''\n        },\n        validationSchema: Yup.object({\n          username: Yup.string().required('Username is required'),\n          password: Yup.string().required('Password is required')\n        }),\n        onSubmit: async (values, {\n          setSubmitting\n        }) => {\n          setSubmitting(true);\n          const user = await login(values.username, values.password);\n          if (user) {\n            setUser(user);\n            navigate(\"/home\");\n          } else {\n            // TODO: Show a error message\n          }\n        },\n        children: ({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting\n        }) => /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(InputContainer, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              placeholder: \"Username\",\n              name: \"username\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(InputErrorLabel, {\n              children: errors.username && touched.username && errors.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"password\",\n              placeholder: \"Password\",\n              name: \"password\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(InputErrorLabel, {\n              children: errors.password && touched.password && errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n            type: \"submit\",\n            disabled: isSubmitting,\n            children: \"Entrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n\n//\n// export default function Login() {\n//     const [username, setUsername] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [error, setError] = useState('');\n//     const navigate = useNavigate();\n//\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         const user = await login(username, password);\n//         if (user) {\n//             navigate(\"/dashboard\");\n//         } else {\n//             setError(\"Invalid username or password\");\n//         }\n//     };\n//\n//     return (\n//         <DefaultLayout>\n//             <Container>\n//                 <Title>Login</Title>\n//                 <form onSubmit={handleSubmit}>\n//                     <Input\n//                         type=\"text\"\n//                         placeholder=\"Username\"\n//                         value={username}\n//                         onChange={(e) => setUsername(e.target.value)}\n//                         required\n//                     />\n//                     <Input\n//                         type=\"password\"\n//                         placeholder=\"Password\"\n//                         value={password}\n//                         onChange={(e) => setPassword(e.target.value)}\n//                         required\n//                     />\n//                     <SubmitButton type=\"submit\">Login</SubmitButton>\n//                     {error && <ErrorMessage>{error}</ErrorMessage>}\n//                 </form>\n//                 <RegisterLink onClick={() => navigate(\"/register\")}>\n//                     Create New Account\n//                 </RegisterLink>\n//             </Container>\n//         </DefaultLayout>\n//     );\n// }\n_s(Login, \"PuxOJ4iojagtHyiJ1JInTtsZoDk=\", true, function () {\n  return [useNavigate];\n});\n_c5 = Login;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"Input\");\n$RefreshReg$(_c4, \"SubmitButton\");\n$RefreshReg$(_c5, \"Login\");","map":{"version":3,"names":["React","useState","styled","useNavigate","DefaultLayout","login","jsxDEV","_jsxDEV","Container","div","_c","Title","h1","_c2","Input","input","_c3","SubmitButton","button","_c4","RegisterLink","ErrorMessage","Login","_s","user","loading","setUser","useAuth","navigate","useEffect","children","fileName","_jsxFileName","lineNumber","columnNumber","Formik","initialValues","username","password","validationSchema","Yup","object","string","required","onSubmit","values","setSubmitting","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","InputContainer","type","placeholder","name","onChange","onBlur","value","InputErrorLabel","disabled","_c5","$RefreshReg$"],"sources":["D:/Transferencias/quiz_modificada/quiz/frontend/src/pages/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport DefaultLayout from \"../layouts/DefaultLayout.jsx\";\nimport { login } from \"../services/Auth.js\";\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    background-color: #0f044c;\n    color: white;\n`;\n\nconst Title = styled.h1`\n    font-size: 48px;\n    color: #f4a261;\n    margin-bottom: 20px;\n`;\n\nconst Input = styled.input`\n    height: 48px;\n    width: 400px;\n    font-size: large;\n    border-radius: 8px;\n    border: 1px solid grey;\n    padding-left: 8px;\n    margin-bottom: 10px;\n`;\n\nconst SubmitButton = styled.button`\n    margin-top: 10px;\n    background-color: #f4a261;\n    color: white;\n    height: 48px;\n    width: 150px;\n    font-size: large;\n    border-radius: 8px;\n    border: none;\n    cursor: pointer;\n\n    &:hover {\n        background-color: #e76f51;\n    }\n`;\n\nconst RegisterLink = styled.div`\n    margin-top: 20px;\n    font-size: 16px;\n    color: #f4a261;\n    cursor: pointer;\n\n    &:hover {\n        text-decoration: underline;\n    }\n`;\n\nconst ErrorMessage = styled.div`\n    color: red;\n    margin-top: 10px;\n`;\n\n\nexport default function Login() {\n    const { user, loading, setUser } = useAuth();\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        if (user && !loading) {\n            navigate(\"/home\");\n        }\n    }, [user, loading, navigate]);\n\n    return (\n        <DefaultLayout>\n            <Container>\n                <Title>Login</Title>\n\n                <Formik\n                    initialValues={{ username: '', password: '' }}\n                    validationSchema={Yup.object({\n                        username: Yup.string()\n                            .required('Username is required'),\n                        password: Yup.string()\n                            .required('Password is required')\n                    })}\n                    onSubmit={async (values, { setSubmitting }) => {\n                        setSubmitting(true);\n                        const user = await login(values.username, values.password);\n\n                        if (user) {\n                            setUser(user);\n                            navigate(\"/home\");\n                        } else {\n                            // TODO: Show a error message\n                        }\n                    }}\n                >\n                    {({\n                          values,\n                          errors,\n                          touched,\n                          handleChange,\n                          handleBlur,\n                          handleSubmit,\n                          isSubmitting,\n                      }) => (\n                        <form onSubmit={handleSubmit}>\n                            <InputContainer>\n                                <Input\n                                    type=\"text\"\n                                    placeholder=\"Username\"\n                                    name=\"username\"\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    value={values.username} />\n                                <InputErrorLabel>{errors.username && touched.username && errors.username}</InputErrorLabel>\n                            </InputContainer>\n                            <InputContainer>\n                                <Input\n                                    type=\"password\"\n                                    placeholder=\"Password\"\n                                    name=\"password\"\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    value={values.password} />\n                                <InputErrorLabel>{errors.password && touched.password && errors.password}</InputErrorLabel>\n                            </InputContainer>\n                            <SubmitButton type=\"submit\" disabled={isSubmitting}>Entrar</SubmitButton>\n                        </form>\n                    )}\n                </Formik>\n            </Container>\n        </DefaultLayout >\n    )\n}\n\n\n\n//\n// export default function Login() {\n//     const [username, setUsername] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [error, setError] = useState('');\n//     const navigate = useNavigate();\n//\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         const user = await login(username, password);\n//         if (user) {\n//             navigate(\"/dashboard\");\n//         } else {\n//             setError(\"Invalid username or password\");\n//         }\n//     };\n//\n//     return (\n//         <DefaultLayout>\n//             <Container>\n//                 <Title>Login</Title>\n//                 <form onSubmit={handleSubmit}>\n//                     <Input\n//                         type=\"text\"\n//                         placeholder=\"Username\"\n//                         value={username}\n//                         onChange={(e) => setUsername(e.target.value)}\n//                         required\n//                     />\n//                     <Input\n//                         type=\"password\"\n//                         placeholder=\"Password\"\n//                         value={password}\n//                         onChange={(e) => setPassword(e.target.value)}\n//                         required\n//                     />\n//                     <SubmitButton type=\"submit\">Login</SubmitButton>\n//                     {error && <ErrorMessage>{error}</ErrorMessage>}\n//                 </form>\n//                 <RegisterLink onClick={() => navigate(\"/register\")}>\n//                     Create New Account\n//                 </RegisterLink>\n//             </Container>\n//         </DefaultLayout>\n//     );\n// }\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}