{"ast":null,"code":"var _jsxFileName = \"D:\\\\Transferencias\\\\quiz_modificada\\\\quiz\\\\frontend\\\\src\\\\pages\\\\Register.jsx\",\n  _s = $RefreshSig$();\n// import DefaultLayout from \"../layouts/DefaultLayout.jsx\";\n// import styled from \"styled-components\";\n// import { Formik } from \"formik\";\n// import * as Yup from \"yup\";\n// import { register } from \"../services/Auth.js\";\n// import { useNavigate } from \"react-router\";\n// import { useEffect } from \"react\";\n// import { useAuth } from \"../Context.js\";\n//\n// const Title = styled.h1`\n//     font-size: 32px;\n//     font-weight: bold;\n//     margin-bottom: 20px;\n//     color: #f4a261;\n// `;\n//\n// const Container = styled.div`\n//     display: flex;\n//     flex-direction: column;\n//     justify-content: center;\n//     align-items: center;\n//     width: 400px;\n//     padding: 30px;\n//     background-color: #0f044c;\n//     border-radius: 15px;\n//     box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n//     text-align: center;\n// `;\n//\n// const Input = styled.input`\n//     height: 48px;\n//     width: 100%;\n//     font-size: large;\n//     border-radius: 8px;\n//     border: 1px solid grey;\n//     padding-left: 8px;\n//     margin-bottom: 10px;\n// `;\n//\n// const InputErrorLabel = styled.label`\n//     color: red;\n//     font-size: 12px;\n//     margin-bottom: 10px;\n// `;\n//\n// const SubmitButton = styled.button`\n//     margin-top: 10px;\n//     background-color: #f4a261;\n//     color: white;\n//     height: 48px;\n//     width: 100%;\n//     font-size: large;\n//     border-radius: 8px;\n//     border: none;\n//     cursor: pointer;\n//     transition: background-color 0.3s ease;\n//\n//     &:hover {\n//         background-color: #e76f51;\n//     }\n// `;\n//\n// const InputContainer = styled.div`\n//     display: flex;\n//     flex-direction: column;\n//     width: 100%;\n// `;\n//\n// export default function Register() {\n//     const { user, loading, setUser } = useAuth();\n//     const navigate = useNavigate();\n//\n//     useEffect(() => {\n//         if (user && !loading) {\n//             navigate(\"/home\");\n//         }\n//     }, [user, loading, navigate]);\n//\n//     const handleSubmit = async (values, { setSubmitting }) => {\n//         setSubmitting(true);\n//         const registeredUser = await register(values.username, values.email, values.firstName, values.lastName, values.password);\n//\n//         if (registeredUser) {\n//             // Mude a navegação para a página de login após o registro bem-sucedido\n//             navigate(\"/login\");\n//         } else {\n//             console.error(\"Registration failed\");\n//         }\n//         setSubmitting(false);\n//     };\n//\n//     return (\n//         <DefaultLayout>\n//             <Container>\n//                 <Title>Register</Title>\n//\n//                 <Formik\n//                     initialValues={{ username: '', email: '', firstName: '', lastName: '', password: '', confirmPassword: '' }}\n//                     validationSchema={Yup.object({\n//                         username: Yup.string().required('Username is required'),\n//                         email: Yup.string().email('Invalid email address').required('Email is required'),\n//                         firstName: Yup.string().required('First name is required'),\n//                         lastName: Yup.string().required('Last name is required'),\n//                         password: Yup.string().required('Password is required'),\n//                         confirmPassword: Yup.string()\n//                             .oneOf([Yup.ref('password'), null], 'Passwords must match')\n//                             .required('Confirm Password is required')\n//                     })}\n//                     onSubmit={handleSubmit}\n//                 >\n//                     {({\n//                           values,\n//                           errors,\n//                           touched,\n//                           handleChange,\n//                           handleBlur,\n//                           handleSubmit,\n//                           isSubmitting,\n//                       }) => (\n//                         <form onSubmit={handleSubmit}>\n//                             <InputContainer>\n//                                 <Input\n//                                     type=\"text\"\n//                                     placeholder=\"Username\"\n//                                     name=\"username\"\n//                                     onChange={handleChange}\n//                                     onBlur={handleBlur}\n//                                     value={values.username} />\n//                                 <InputErrorLabel>{errors.username && touched.username && errors.username}</InputErrorLabel>\n//                             </InputContainer>\n//                             <InputContainer>\n//                                 <Input\n//                                     type=\"email\"\n//                                     placeholder=\"Email\"\n//                                     name=\"email\"\n//                                     onChange={handleChange}\n//                                     onBlur={handleBlur}\n//                                     value={values.email} />\n//                                 <InputErrorLabel>{errors.email && touched.email && errors.email}</InputErrorLabel>\n//                             </InputContainer>\n//                             <InputContainer>\n//                                 <Input\n//                                     type=\"text\"\n//                                     placeholder=\"First Name\"\n//                                     name=\"firstName\"\n//                                     onChange={handleChange}\n//                                     onBlur={handleBlur}\n//                                     value={values.firstName} />\n//                                 <InputErrorLabel>{errors.firstName && touched.firstName && errors.firstName}</InputErrorLabel>\n//                             </InputContainer>\n//                             <InputContainer>\n//                                 <Input\n//                                     type=\"text\"\n//                                     placeholder=\"Last Name\"\n//                                     name=\"lastName\"\n//                                     onChange={handleChange}\n//                                     onBlur={handleBlur}\n//                                     value={values.lastName} />\n//                                 <InputErrorLabel>{errors.lastName && touched.lastName && errors.lastName}</InputErrorLabel>\n//                             </InputContainer>\n//                             <InputContainer>\n//                                 <Input\n//                                     type=\"password\"\n//                                     placeholder=\"Password\"\n//                                     name=\"password\"\n//                                     onChange={handleChange}\n//                                     onBlur={handleBlur}\n//                                     value={values.password} />\n//                                 <InputErrorLabel>{errors.password && touched.password && errors.password}</InputErrorLabel>\n//                             </InputContainer>\n//                             <InputContainer>\n//                                 <Input\n//                                     type=\"password\"\n//                                     placeholder=\"Confirm Password\"\n//                                     name=\"confirmPassword\"\n//                                     onChange={handleChange}\n//                                     onBlur={handleBlur}\n//                                     value={values.confirmPassword} />\n//                                 <InputErrorLabel>{errors.confirmPassword && touched.confirmPassword && errors.confirmPassword}</InputErrorLabel>\n//                             </InputContainer>\n//                             <SubmitButton type=\"submit\" disabled={isSubmitting}>Register</SubmitButton>\n//                         </form>\n//                     )}\n//                 </Formik>\n//             </Container>\n//         </DefaultLayout>\n//     )\n// }\n\nimport DefaultLayout from \"../layouts/DefaultLayout.jsx\";\nimport styled from \"styled-components\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { register } from \"../services/Auth.js\";\nimport { useNavigate } from \"react-router\";\n// import { useEffect } from \"react\";\nimport { useAuth } from \"../Context.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Title = styled.h1`\n    font-size: 32px;\n    font-weight: bold;\n    margin-bottom: 20px;\n    color: #f4a261;\n`;\n_c = Title;\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 400px;\n    padding: 30px;\n    background-color: #0f044c;\n    border-radius: 15px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n    text-align: center;\n`;\n_c2 = Container;\nconst Input = styled.input`\n    height: 48px;\n    width: 100%;\n    font-size: large;\n    border-radius: 8px;\n    border: 1px solid grey;\n    padding-left: 8px;\n    margin-bottom: 10px;\n`;\n_c3 = Input;\nconst InputErrorLabel = styled.label`\n    color: red;\n    font-size: 12px;\n    margin-bottom: 10px;\n`;\n_c4 = InputErrorLabel;\nconst SubmitButton = styled.button`\n    margin-top: 10px;\n    background-color: #f4a261;\n    color: white;\n    height: 48px;\n    width: 100%;\n    font-size: large;\n    border-radius: 8px;\n    border: none;\n    cursor: pointer;\n    transition: background-color 0.3s ease;\n\n    &:hover {\n        background-color: #e76f51;\n    }\n`;\n_c5 = SubmitButton;\nconst InputContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n`;\n_c6 = InputContainer;\nexport default function Register() {\n  _s();\n  // const { user, loading, setUser } = useAuth();\n  const {\n    setUser\n  } = useAuth();\n  const navigate = useNavigate();\n\n  // useEffect(() => {\n  //     if (user && !loading) {\n  //         navigate(\"/register\");\n  //     }\n  // }, [user, loading, navigate]);\n\n  const handleSubmit = async (values, {\n    setSubmitting\n  }) => {\n    setSubmitting(true);\n    const registeredUser = await register(values.username, values.email, values.firstName, values.lastName, values.password);\n    if (registeredUser) {\n      setUser(registeredUser);\n      navigate(\"/login\");\n    } else {\n      console.error(\"Registration failed\");\n    }\n    setSubmitting(false);\n  };\n  return /*#__PURE__*/_jsxDEV(DefaultLayout, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          username: '',\n          email: '',\n          firstName: '',\n          lastName: '',\n          password: '',\n          confirmPassword: ''\n        },\n        validationSchema: Yup.object({\n          username: Yup.string().required('Username is required'),\n          email: Yup.string().email('Invalid email address').required('Email is required'),\n          firstName: Yup.string().required('First name is required'),\n          lastName: Yup.string().required('Last name is required'),\n          password: Yup.string().required('Password is required'),\n          confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match').required('Confirm Password is required')\n        }),\n        onSubmit: handleSubmit,\n        children: ({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting\n        }) => /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(InputContainer, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              placeholder: \"Username\",\n              name: \"username\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(InputErrorLabel, {\n              children: errors.username && touched.username && errors.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"email\",\n              placeholder: \"Email\",\n              name: \"email\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(InputErrorLabel, {\n              children: errors.email && touched.email && errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              placeholder: \"First Name\",\n              name: \"firstName\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(InputErrorLabel, {\n              children: errors.firstName && touched.firstName && errors.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              placeholder: \"Last Name\",\n              name: \"lastName\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(InputErrorLabel, {\n              children: errors.lastName && touched.lastName && errors.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"password\",\n              placeholder: \"Password\",\n              name: \"password\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(InputErrorLabel, {\n              children: errors.password && touched.password && errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"password\",\n              placeholder: \"Confirm Password\",\n              name: \"confirmPassword\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.confirmPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(InputErrorLabel, {\n              children: errors.confirmPassword && touched.confirmPassword && errors.confirmPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n            type: \"submit\",\n            disabled: isSubmitting,\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 9\n  }, this);\n}\n_s(Register, \"U1Lxya3wEBHJ8OU0ex3nifsGofA=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c7 = Register;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Input\");\n$RefreshReg$(_c4, \"InputErrorLabel\");\n$RefreshReg$(_c5, \"SubmitButton\");\n$RefreshReg$(_c6, \"InputContainer\");\n$RefreshReg$(_c7, \"Register\");","map":{"version":3,"names":["DefaultLayout","styled","Formik","Yup","register","useNavigate","useAuth","jsxDEV","_jsxDEV","Title","h1","_c","Container","div","_c2","Input","input","_c3","InputErrorLabel","label","_c4","SubmitButton","button","_c5","InputContainer","_c6","Register","_s","setUser","navigate","handleSubmit","values","setSubmitting","registeredUser","username","email","firstName","lastName","password","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","confirmPassword","validationSchema","object","string","required","oneOf","ref","onSubmit","errors","touched","handleChange","handleBlur","isSubmitting","type","placeholder","name","onChange","onBlur","value","disabled","_c7","$RefreshReg$"],"sources":["D:/Transferencias/quiz_modificada/quiz/frontend/src/pages/Register.jsx"],"sourcesContent":["// import DefaultLayout from \"../layouts/DefaultLayout.jsx\";\r\n// import styled from \"styled-components\";\r\n// import { Formik } from \"formik\";\r\n// import * as Yup from \"yup\";\r\n// import { register } from \"../services/Auth.js\";\r\n// import { useNavigate } from \"react-router\";\r\n// import { useEffect } from \"react\";\r\n// import { useAuth } from \"../Context.js\";\r\n//\r\n// const Title = styled.h1`\r\n//     font-size: 32px;\r\n//     font-weight: bold;\r\n//     margin-bottom: 20px;\r\n//     color: #f4a261;\r\n// `;\r\n//\r\n// const Container = styled.div`\r\n//     display: flex;\r\n//     flex-direction: column;\r\n//     justify-content: center;\r\n//     align-items: center;\r\n//     width: 400px;\r\n//     padding: 30px;\r\n//     background-color: #0f044c;\r\n//     border-radius: 15px;\r\n//     box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n//     text-align: center;\r\n// `;\r\n//\r\n// const Input = styled.input`\r\n//     height: 48px;\r\n//     width: 100%;\r\n//     font-size: large;\r\n//     border-radius: 8px;\r\n//     border: 1px solid grey;\r\n//     padding-left: 8px;\r\n//     margin-bottom: 10px;\r\n// `;\r\n//\r\n// const InputErrorLabel = styled.label`\r\n//     color: red;\r\n//     font-size: 12px;\r\n//     margin-bottom: 10px;\r\n// `;\r\n//\r\n// const SubmitButton = styled.button`\r\n//     margin-top: 10px;\r\n//     background-color: #f4a261;\r\n//     color: white;\r\n//     height: 48px;\r\n//     width: 100%;\r\n//     font-size: large;\r\n//     border-radius: 8px;\r\n//     border: none;\r\n//     cursor: pointer;\r\n//     transition: background-color 0.3s ease;\r\n//\r\n//     &:hover {\r\n//         background-color: #e76f51;\r\n//     }\r\n// `;\r\n//\r\n// const InputContainer = styled.div`\r\n//     display: flex;\r\n//     flex-direction: column;\r\n//     width: 100%;\r\n// `;\r\n//\r\n// export default function Register() {\r\n//     const { user, loading, setUser } = useAuth();\r\n//     const navigate = useNavigate();\r\n//\r\n//     useEffect(() => {\r\n//         if (user && !loading) {\r\n//             navigate(\"/home\");\r\n//         }\r\n//     }, [user, loading, navigate]);\r\n//\r\n//     const handleSubmit = async (values, { setSubmitting }) => {\r\n//         setSubmitting(true);\r\n//         const registeredUser = await register(values.username, values.email, values.firstName, values.lastName, values.password);\r\n//\r\n//         if (registeredUser) {\r\n//             // Mude a navegação para a página de login após o registro bem-sucedido\r\n//             navigate(\"/login\");\r\n//         } else {\r\n//             console.error(\"Registration failed\");\r\n//         }\r\n//         setSubmitting(false);\r\n//     };\r\n//\r\n//     return (\r\n//         <DefaultLayout>\r\n//             <Container>\r\n//                 <Title>Register</Title>\r\n//\r\n//                 <Formik\r\n//                     initialValues={{ username: '', email: '', firstName: '', lastName: '', password: '', confirmPassword: '' }}\r\n//                     validationSchema={Yup.object({\r\n//                         username: Yup.string().required('Username is required'),\r\n//                         email: Yup.string().email('Invalid email address').required('Email is required'),\r\n//                         firstName: Yup.string().required('First name is required'),\r\n//                         lastName: Yup.string().required('Last name is required'),\r\n//                         password: Yup.string().required('Password is required'),\r\n//                         confirmPassword: Yup.string()\r\n//                             .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n//                             .required('Confirm Password is required')\r\n//                     })}\r\n//                     onSubmit={handleSubmit}\r\n//                 >\r\n//                     {({\r\n//                           values,\r\n//                           errors,\r\n//                           touched,\r\n//                           handleChange,\r\n//                           handleBlur,\r\n//                           handleSubmit,\r\n//                           isSubmitting,\r\n//                       }) => (\r\n//                         <form onSubmit={handleSubmit}>\r\n//                             <InputContainer>\r\n//                                 <Input\r\n//                                     type=\"text\"\r\n//                                     placeholder=\"Username\"\r\n//                                     name=\"username\"\r\n//                                     onChange={handleChange}\r\n//                                     onBlur={handleBlur}\r\n//                                     value={values.username} />\r\n//                                 <InputErrorLabel>{errors.username && touched.username && errors.username}</InputErrorLabel>\r\n//                             </InputContainer>\r\n//                             <InputContainer>\r\n//                                 <Input\r\n//                                     type=\"email\"\r\n//                                     placeholder=\"Email\"\r\n//                                     name=\"email\"\r\n//                                     onChange={handleChange}\r\n//                                     onBlur={handleBlur}\r\n//                                     value={values.email} />\r\n//                                 <InputErrorLabel>{errors.email && touched.email && errors.email}</InputErrorLabel>\r\n//                             </InputContainer>\r\n//                             <InputContainer>\r\n//                                 <Input\r\n//                                     type=\"text\"\r\n//                                     placeholder=\"First Name\"\r\n//                                     name=\"firstName\"\r\n//                                     onChange={handleChange}\r\n//                                     onBlur={handleBlur}\r\n//                                     value={values.firstName} />\r\n//                                 <InputErrorLabel>{errors.firstName && touched.firstName && errors.firstName}</InputErrorLabel>\r\n//                             </InputContainer>\r\n//                             <InputContainer>\r\n//                                 <Input\r\n//                                     type=\"text\"\r\n//                                     placeholder=\"Last Name\"\r\n//                                     name=\"lastName\"\r\n//                                     onChange={handleChange}\r\n//                                     onBlur={handleBlur}\r\n//                                     value={values.lastName} />\r\n//                                 <InputErrorLabel>{errors.lastName && touched.lastName && errors.lastName}</InputErrorLabel>\r\n//                             </InputContainer>\r\n//                             <InputContainer>\r\n//                                 <Input\r\n//                                     type=\"password\"\r\n//                                     placeholder=\"Password\"\r\n//                                     name=\"password\"\r\n//                                     onChange={handleChange}\r\n//                                     onBlur={handleBlur}\r\n//                                     value={values.password} />\r\n//                                 <InputErrorLabel>{errors.password && touched.password && errors.password}</InputErrorLabel>\r\n//                             </InputContainer>\r\n//                             <InputContainer>\r\n//                                 <Input\r\n//                                     type=\"password\"\r\n//                                     placeholder=\"Confirm Password\"\r\n//                                     name=\"confirmPassword\"\r\n//                                     onChange={handleChange}\r\n//                                     onBlur={handleBlur}\r\n//                                     value={values.confirmPassword} />\r\n//                                 <InputErrorLabel>{errors.confirmPassword && touched.confirmPassword && errors.confirmPassword}</InputErrorLabel>\r\n//                             </InputContainer>\r\n//                             <SubmitButton type=\"submit\" disabled={isSubmitting}>Register</SubmitButton>\r\n//                         </form>\r\n//                     )}\r\n//                 </Formik>\r\n//             </Container>\r\n//         </DefaultLayout>\r\n//     )\r\n// }\r\n\r\n\r\n\r\nimport DefaultLayout from \"../layouts/DefaultLayout.jsx\";\r\nimport styled from \"styled-components\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { register } from \"../services/Auth.js\";\r\nimport { useNavigate } from \"react-router\";\r\n// import { useEffect } from \"react\";\r\nimport { useAuth } from \"../Context.js\";\r\n\r\nconst Title = styled.h1`\r\n    font-size: 32px;\r\n    font-weight: bold;\r\n    margin-bottom: 20px;\r\n    color: #f4a261;\r\n`;\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 400px;\r\n    padding: 30px;\r\n    background-color: #0f044c;\r\n    border-radius: 15px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n    text-align: center;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    height: 48px;\r\n    width: 100%;\r\n    font-size: large;\r\n    border-radius: 8px;\r\n    border: 1px solid grey;\r\n    padding-left: 8px;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst InputErrorLabel = styled.label`\r\n    color: red;\r\n    font-size: 12px;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\n    margin-top: 10px;\r\n    background-color: #f4a261;\r\n    color: white;\r\n    height: 48px;\r\n    width: 100%;\r\n    font-size: large;\r\n    border-radius: 8px;\r\n    border: none;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s ease;\r\n\r\n    &:hover {\r\n        background-color: #e76f51;\r\n    }\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n`;\r\n\r\nexport default function Register() {\r\n    // const { user, loading, setUser } = useAuth();\r\n    const { setUser } = useAuth();\r\n    const navigate = useNavigate();\r\n\r\n    // useEffect(() => {\r\n    //     if (user && !loading) {\r\n    //         navigate(\"/register\");\r\n    //     }\r\n    // }, [user, loading, navigate]);\r\n\r\n    const handleSubmit = async (values, { setSubmitting }) => {\r\n        setSubmitting(true);\r\n        const registeredUser = await register(values.username, values.email, values.firstName, values.lastName, values.password);\r\n\r\n        if (registeredUser) {\r\n            setUser(registeredUser);\r\n            navigate(\"/login\");\r\n        } else {\r\n            console.error(\"Registration failed\");\r\n        }\r\n        setSubmitting(false);\r\n    };\r\n\r\n    return (\r\n        <DefaultLayout>\r\n            <Container>\r\n                <Title>Register</Title>\r\n\r\n\r\n\r\n                <Formik\r\n                    initialValues={{ username: '', email: '',firstName:'', lastName: '', password: '', confirmPassword: '' }}\r\n                    validationSchema={Yup.object({\r\n                        username: Yup.string().required('Username is required'),\r\n                        email: Yup.string().email('Invalid email address').required('Email is required'),\r\n                        firstName: Yup.string().required('First name is required'),\r\n                        lastName: Yup.string().required('Last name is required'),\r\n                        password: Yup.string().required('Password is required'),\r\n                        confirmPassword: Yup.string()\r\n                            .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n                            .required('Confirm Password is required')\r\n                    })}\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    {({\r\n                          values,\r\n                          errors,\r\n                          touched,\r\n                          handleChange,\r\n                          handleBlur,\r\n                          handleSubmit,\r\n                          isSubmitting,\r\n                      }) => (\r\n                        <form onSubmit={handleSubmit}>\r\n\r\n                            <InputContainer>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Username\"\r\n                                    name=\"username\"\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.username} />\r\n                                <InputErrorLabel>{errors.username && touched.username && errors.username}</InputErrorLabel>\r\n                            </InputContainer>\r\n                            <InputContainer>\r\n                                <Input\r\n                                    type=\"email\"\r\n                                    placeholder=\"Email\"\r\n                                    name=\"email\"\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.email} />\r\n                                <InputErrorLabel>{errors.email && touched.email && errors.email}</InputErrorLabel>\r\n                            </InputContainer>\r\n\r\n                            <InputContainer>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    placeholder=\"First Name\"\r\n                                    name=\"firstName\"\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.firstName} />\r\n                                <InputErrorLabel>{errors.firstName && touched.firstName && errors.firstName}</InputErrorLabel>\r\n                            </InputContainer>\r\n                            <InputContainer>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Last Name\"\r\n                                    name=\"lastName\"\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.lastName} />\r\n                                <InputErrorLabel>{errors.lastName && touched.lastName && errors.lastName}</InputErrorLabel>\r\n                            </InputContainer>\r\n                            <InputContainer>\r\n                                <Input\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    name=\"password\"\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.password} />\r\n                                <InputErrorLabel>{errors.password && touched.password && errors.password}</InputErrorLabel>\r\n                            </InputContainer>\r\n                            <InputContainer>\r\n                                <Input\r\n                                    type=\"password\"\r\n                                    placeholder=\"Confirm Password\"\r\n                                    name=\"confirmPassword\"\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.confirmPassword} />\r\n                                <InputErrorLabel>{errors.confirmPassword && touched.confirmPassword && errors.confirmPassword}</InputErrorLabel>\r\n                            </InputContainer>\r\n                            <SubmitButton type=\"submit\" disabled={isSubmitting}>Register</SubmitButton>\r\n                        </form>\r\n                    )}\r\n                </Formik>\r\n            </Container>\r\n        </DefaultLayout>\r\n    )\r\n}\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}